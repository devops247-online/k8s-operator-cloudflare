# Default values for cloudflare-dns-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: cloudflare-dns-operator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# RBAC configuration
rbac:
  # Specifies whether RBAC resources should be created
  create: true

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  fsGroup: 65532

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  # Metrics port
  metricsPort: 8081

resources:
  limits:
    cpu: 500m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 64Mi

# Liveness and readiness probe configuration
livenessProbe:
  httpGet:
    path: /healthz
    port: 8081
  initialDelaySeconds: 15
  periodSeconds: 20

readinessProbe:
  httpGet:
    path: /readyz
    port: 8081
  initialDelaySeconds: 5
  periodSeconds: 10

nodeSelector: {}

tolerations: []

affinity: {}

# Cloudflare configuration
cloudflare:
  # Cloudflare account email
  email: ""
  # Cloudflare API Token (if not using existing secret)
  apiToken: ""
  # Name of existing secret containing API token
  apiTokenSecretName: ""
  # Key in the secret containing API token
  apiTokenSecretKey: "api-token"  # pragma: allowlist secret
  # Cloudflare Zone ID (optional, can be auto-discovered)
  zoneId: ""

# Operator configuration
operator:
  # Log level (debug, info, warn, error)
  logLevel: info
  # Enable leader election for controller manager
  leaderElection: true
  # Metrics bind address
  metricsBindAddress: ":8081"
  # Health probe bind address
  healthProbeBindAddress: ":8081"
  # Webhook port
  webhookPort: 9443
  # Enable webhook
  enableWebhook: false

# CRD installation
crds:
  # Install CRDs as part of the Helm release
  install: true
  # Keep CRDs on chart uninstall
  keep: true

# Monitoring
monitoring:
  # Enable ServiceMonitor for Prometheus Operator
  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
    honorLabels: true
    metricRelabelings: []
    relabelings: []

# Network policies
networkPolicy:
  enabled: false
  policyTypes:
    - Ingress
    - Egress
  ingress: []
  egress:
    - ports:
      - port: 443
        protocol: TCP
      - port: 53
        protocol: UDP
      - port: 53
        protocol: TCP
