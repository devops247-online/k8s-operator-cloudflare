{{- if and .Values.secrets.provider (eq .Values.secrets.provider "external-secrets-operator") -}}
{{- if .Values.secrets.externalSecretsOperator.enabled -}}
{{- if eq .Values.secrets.externalSecretsOperator.secretStore.backend "vault" -}}
---
# Secret Store for Vault backend
apiVersion: external-secrets.io/v1beta1
kind: {{ .Values.secrets.externalSecretsOperator.secretStore.kind }}
metadata:
  name: {{ .Values.secrets.externalSecretsOperator.secretStore.name }}
  {{- if eq .Values.secrets.externalSecretsOperator.secretStore.kind "SecretStore" }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
  labels:
    {{- include "cloudflare-dns-operator.labels" . | nindent 4 }}
    app.kubernetes.io/component: secret-store
spec:
  provider:
    vault:
      server: {{ .Values.secrets.vault.address | quote }}
      path: {{ .Values.secrets.vault.path | quote }}
      version: "v2"
      {{- if eq .Values.secrets.vault.authMethod "kubernetes" }}
      auth:
        kubernetes:
          mountPath: kubernetes
          role: {{ .Values.secrets.vault.kubernetes.role | quote }}
          {{- if .Values.secrets.vault.kubernetes.serviceAccount }}
          serviceAccountRef:
            name: {{ .Values.secrets.vault.kubernetes.serviceAccount }}
          {{- else }}
          serviceAccountRef:
            name: {{ include "cloudflare-dns-operator.serviceAccountName" . }}
          {{- end }}
      {{- else if eq .Values.secrets.vault.authMethod "token" }}
      auth:
        tokenSecretRef:
          name: vault-token
          key: token
      {{- else if eq .Values.secrets.vault.authMethod "approle" }}
      auth:
        appRole:
          path: approle
          roleId: {{ .Values.secrets.vault.appRole.roleId | quote }}
          secretRef:
            name: vault-approle-secret
            key: secretId
      {{- end }}
{{- end }}
{{- end }}
{{- end }}
