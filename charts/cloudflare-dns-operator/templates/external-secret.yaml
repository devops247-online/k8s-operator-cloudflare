{{- if and .Values.secrets.provider (eq .Values.secrets.provider "external-secrets-operator") -}}
{{- if .Values.secrets.externalSecretsOperator.enabled -}}
---
# External Secret for Cloudflare credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.secrets.externalSecretsOperator.externalSecret.name | default (include "cloudflare-dns-operator.fullname" .) }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cloudflare-dns-operator.labels" . | nindent 4 }}
    app.kubernetes.io/component: external-secret
spec:
  secretStoreRef:
    name: {{ .Values.secrets.externalSecretsOperator.secretStore.name }}
    kind: {{ .Values.secrets.externalSecretsOperator.secretStore.kind }}
  refreshInterval: {{ .Values.secrets.externalSecretsOperator.refreshInterval }}
  target:
    name: {{ .Values.cloudflare.apiTokenSecretName | default (printf "%s-credentials" (include "cloudflare-dns-operator.fullname" .)) }}
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        {{ .Values.cloudflare.apiTokenSecretKey }}: "{{ `{{ .apiToken }}` }}"
        {{- if .Values.cloudflare.email }}
        email: "{{ `{{ .email }}` }}"
        {{- end }}
        {{- if .Values.cloudflare.zoneId }}
        zoneId: "{{ `{{ .zoneId }}` }}"
        {{- end }}
  {{- if .Values.secrets.externalSecretsOperator.externalSecret.dataFrom }}
  dataFrom:
    {{- toYaml .Values.secrets.externalSecretsOperator.externalSecret.dataFrom | nindent 4 }}
  {{- else }}
  data:
    - secretKey: apiToken  # pragma: allowlist secret
      remoteRef:
        key: {{ .Values.secrets.vault.path }}/apiToken  # pragma: allowlist secret
    {{- if .Values.cloudflare.email }}
    - secretKey: email  # pragma: allowlist secret
      remoteRef:
        key: {{ .Values.secrets.vault.path }}/email  # pragma: allowlist secret
    {{- end }}
    {{- if .Values.cloudflare.zoneId }}
    - secretKey: zoneId  # pragma: allowlist secret
      remoteRef:
        key: {{ .Values.secrets.vault.path }}/zoneId  # pragma: allowlist secret
    {{- end }}
  {{- end }}
{{- end }}
{{- end }}
