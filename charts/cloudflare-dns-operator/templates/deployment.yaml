apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudflare-dns-operator.fullname" . }}
  labels:
    {{- include "cloudflare-dns-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ if .Values.highAvailability.enabled }}{{ .Values.highAvailability.replicaCount }}{{ else }}{{ .Values.replicaCount }}{{ end }}
  selector:
    matchLabels:
      {{- include "cloudflare-dns-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cloudflare-dns-operator.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: >-
        {{ include "cloudflare-dns-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: >-
            {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /manager
          args:
            - --leader-elect={{ if .Values.highAvailability.enabled }}{{ .Values.highAvailability.leaderElection.enabled }}{{ else }}{{ .Values.operator.leaderElection }}{{ end }}
            - --metrics-bind-address={{ .Values.operator.metricsBindAddress }}
            - >-
              --health-probe-bind-address={{ .Values.operator.healthProbeBindAddress }}
            {{- if .Values.highAvailability.enabled }}
            {{- if .Values.highAvailability.leaderElection.leaseDuration }}
            - --leader-elect-lease-duration={{ .Values.highAvailability.leaderElection.leaseDuration }}
            {{- end }}
            {{- if .Values.highAvailability.leaderElection.renewDeadline }}
            - --leader-elect-renew-deadline={{ .Values.highAvailability.leaderElection.renewDeadline }}
            {{- end }}
            {{- if .Values.highAvailability.leaderElection.retryPeriod }}
            - --leader-elect-retry-period={{ .Values.highAvailability.leaderElection.retryPeriod }}
            {{- end }}
            {{- if .Values.highAvailability.leaderElection.resourceName }}
            - --leader-elect-resource-name={{ .Values.highAvailability.leaderElection.resourceName }}
            {{- end }}
            {{- if .Values.highAvailability.leaderElection.resourceNamespace }}
            - --leader-elect-resource-namespace={{ .Values.highAvailability.leaderElection.resourceNamespace }}
            {{- end }}
            {{- end }}
          env:
            - name: CLOUDFLARE_EMAIL
              value: {{ .Values.cloudflare.email | quote }}
            {{- if .Values.cloudflare.apiTokenSecretName }}
            - name: CLOUDFLARE_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cloudflare.apiTokenSecretName }}
                  key: {{ .Values.cloudflare.apiTokenSecretKey }}
            {{- else if .Values.cloudflare.apiToken }}
            - name: CLOUDFLARE_API_TOKEN
              value: {{ .Values.cloudflare.apiToken | quote }}
            {{- end }}
            {{- if .Values.cloudflare.zoneId }}
            - name: CLOUDFLARE_ZONE_ID
              value: {{ .Values.cloudflare.zoneId | quote }}
            {{- end }}
            - name: LOG_LEVEL
              value: {{ .Values.operator.logLevel | quote }}
            {{- if .Values.profiling.enabled }}
            - name: ENABLE_PPROF
              value: "true"
            {{- end }}
            {{- if .Values.performance }}
            {{- if .Values.performance.controller }}
            - name: MAX_CONCURRENT_RECONCILES
              value: {{ .Values.performance.controller.maxConcurrentReconciles | quote }}
            - name: RECONCILE_TIMEOUT
              value: {{ printf "%ds" (int .Values.performance.controller.reconcileTimeout) | quote }}
            - name: REQUEUE_INTERVAL
              value: {{ printf "%ds" (int .Values.performance.controller.requeueInterval) | quote }}
            - name: REQUEUE_INTERVAL_ON_ERROR
              value: {{ printf "%ds" (int .Values.performance.controller.requeueIntervalOnError) | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.multitenancy.enabled }}
            - name: MULTITENANCY_ENABLED
              value: "true"
            - name: MULTITENANCY_SCOPE
              value: {{ .Values.multitenancy.scope | quote }}
            {{- if eq .Values.multitenancy.scope "multi-namespace" }}
            - name: WATCH_NAMESPACES
              value: {{ join "," .Values.multitenancy.watchNamespaces | quote }}
            {{- else if eq .Values.multitenancy.scope "namespace" }}
            - name: WATCH_NAMESPACE
              value: {{ .Release.Namespace | quote }}
            {{- end }}
            - name: ENFORCE_NAMESPACE_SECRETS
              value: >-
                {{ .Values.multitenancy.validation.enforceNamespaceSecrets | quote }}
            - name: VALIDATE_ZONE_OWNERSHIP
              value: >-
                {{ .Values.multitenancy.validation.validateZoneOwnership | quote }}
            {{- if .Values.multitenancy.validation.allowedZones }}
            - name: ALLOWED_ZONES_CONFIG
              value: >-
                {{ toJson .Values.multitenancy.validation.allowedZones | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: metrics
              containerPort: 8081
              protocol: TCP
            - name: webhook
              containerPort: {{ .Values.operator.webhookPort }}
              protocol: TCP
          {{- if .Values.healthChecks.enabled }}
          livenessProbe:
            {{- toYaml .Values.healthChecks.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.healthChecks.readinessProbe | nindent 12 }}
          {{- if .Values.healthChecks.startupProbe }}
          startupProbe:
            {{- toYaml .Values.healthChecks.startupProbe | nindent 12 }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: temp
          {{- if and .Values.highAvailability.enabled .Values.highAvailability.gracefulShutdown.enabled }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - sleep {{ .Values.highAvailability.gracefulShutdown.preStopDelay }}
          {{- end }}
      volumes:
        - name: temp
          emptyDir: {}
      {{- if and .Values.highAvailability.enabled .Values.highAvailability.gracefulShutdown.enabled }}
      terminationGracePeriodSeconds: {{ .Values.highAvailability.gracefulShutdown.terminationGracePeriodSeconds }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.affinity (and .Values.highAvailability.enabled .Values.highAvailability.podAntiAffinity.enabled) }}
      affinity:
        {{- if and .Values.highAvailability.enabled .Values.highAvailability.podAntiAffinity.enabled }}
        podAntiAffinity:
          {{- if eq .Values.highAvailability.podAntiAffinity.type "preferred" }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: {{ .Values.highAvailability.podAntiAffinity.weight }}
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "cloudflare-dns-operator.selectorLabels" . | nindent 20 }}
                topologyKey: {{ .Values.highAvailability.podAntiAffinity.topologyKey }}
          {{- else if eq .Values.highAvailability.podAntiAffinity.type "required" }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  {{- include "cloudflare-dns-operator.selectorLabels" . | nindent 18 }}
              topologyKey: {{ .Values.highAvailability.podAntiAffinity.topologyKey }}
          {{- end }}
        {{- end }}
        {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
