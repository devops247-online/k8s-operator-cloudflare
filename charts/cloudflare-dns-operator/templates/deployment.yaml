apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudflare-dns-operator.fullname" . }}
  labels:
    {{- include "cloudflare-dns-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ if .Values.highAvailability.enabled }}{{ .Values.highAvailability.replicaCount }}{{ else }}{{ .Values.replicaCount }}{{ end }}
  selector:
    matchLabels:
      {{- include "cloudflare-dns-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cloudflare-dns-operator.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: >-
        {{ include "cloudflare-dns-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: >-
            {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /manager
          args:
            - --leader-elect={{ if .Values.highAvailability.enabled }}{{ .Values.highAvailability.leaderElection.enabled }}{{ else }}{{ .Values.operator.leaderElection }}{{ end }}
            - --metrics-bind-address={{ .Values.operator.metricsBindAddress }}
            - >-
              --health-probe-bind-address={{ .Values.operator.healthProbeBindAddress }}
            {{- if .Values.highAvailability.enabled }}
            {{- if .Values.highAvailability.leaderElection.leaseDuration }}
            - --leader-elect-lease-duration={{ .Values.highAvailability.leaderElection.leaseDuration }}
            {{- end }}
            {{- if .Values.highAvailability.leaderElection.renewDeadline }}
            - --leader-elect-renew-deadline={{ .Values.highAvailability.leaderElection.renewDeadline }}
            {{- end }}
            {{- if .Values.highAvailability.leaderElection.retryPeriod }}
            - --leader-elect-retry-period={{ .Values.highAvailability.leaderElection.retryPeriod }}
            {{- end }}
            {{- if .Values.highAvailability.leaderElection.resourceName }}
            - --leader-elect-resource-name={{ .Values.highAvailability.leaderElection.resourceName }}
            {{- end }}
            {{- if .Values.highAvailability.leaderElection.resourceNamespace }}
            - --leader-elect-resource-namespace={{ .Values.highAvailability.leaderElection.resourceNamespace }}
            {{- end }}
            {{- end }}
          env:
            - name: CLOUDFLARE_EMAIL
              value: {{ .Values.cloudflare.email | quote }}
            {{- if .Values.cloudflare.apiTokenSecretName }}
            - name: CLOUDFLARE_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cloudflare.apiTokenSecretName }}
                  key: {{ .Values.cloudflare.apiTokenSecretKey }}
            {{- else if .Values.cloudflare.apiToken }}
            - name: CLOUDFLARE_API_TOKEN
              value: {{ .Values.cloudflare.apiToken | quote }}
            {{- end }}
            {{- if .Values.cloudflare.zoneId }}
            - name: CLOUDFLARE_ZONE_ID
              value: {{ .Values.cloudflare.zoneId | quote }}
            {{- end }}
            # Structured Logging configuration
            {{- if .Values.logging.enabled }}
            {{- include "cloudflare-dns-operator.loggingEnvVars" . | nindent 12 }}
            {{- else }}
            - name: LOG_LEVEL
              value: {{ .Values.operator.logLevel | quote }}
            {{- end }}
            # Distributed Tracing configuration
            {{- include "cloudflare-dns-operator.tracingEnvVars" . | nindent 12 }}
            {{- include "cloudflare-dns-operator.tracingResourceAttributesEnvVars" . | nindent 12 }}
            {{- include "cloudflare-dns-operator.tracingHeadersEnvVars" . | nindent 12 }}
            # SLO Monitoring configuration
            {{- if .Values.slo.enabled }}
            - name: SLO_ENABLED
              value: "true"
            {{- include "cloudflare-dns-operator.sloEnvVars" . | nindent 12 }}
            {{- else }}
            - name: SLO_ENABLED
              value: "false"
            {{- end }}
            # Reliability patterns configuration
            {{- if .Values.reliability.enabled }}
            - name: RELIABILITY_ENABLED
              value: "true"
            {{- include "cloudflare-dns-operator.reliabilityEnvVars" . | nindent 12 }}
            {{- else }}
            - name: RELIABILITY_ENABLED
              value: "false"
            {{- end }}
            {{- if .Values.config.enabled }}
            - name: OPERATOR_ENVIRONMENT
              value: {{ .Values.config.environment | default .Values.environment | default "production" | quote }}
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if .Values.config.secretName }}
            - name: CONFIG_SECRET_NAME
              value: {{ .Values.config.secretName | quote }}
            {{- end }}
            # Configuration management environment variables
            - name: CONFIG_LOAD_FROM_CONFIGMAP
              value: "true"
            - name: CONFIG_CONFIGMAP_NAME
              value: {{ include "cloudflare-dns-operator.fullname" . }}-config
            - name: CONFIG_LOAD_FROM_ENV
              value: "true"
            {{- if .Values.config.environment }}
            - name: CONFIG_ENVIRONMENT
              value: {{ .Values.config.environment | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: metrics
              containerPort: 8081
              protocol: TCP
            - name: webhook
              containerPort: {{ .Values.operator.webhookPort }}
              protocol: TCP
          {{- if .Values.healthChecks.enabled }}
          livenessProbe:
            {{- toYaml .Values.healthChecks.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.healthChecks.readinessProbe | nindent 12 }}
          {{- if .Values.healthChecks.startupProbe }}
          startupProbe:
            {{- toYaml .Values.healthChecks.startupProbe | nindent 12 }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: temp
            {{- if .Values.config.enabled }}
            - mountPath: /etc/config
              name: config
              readOnly: true
            {{- end }}
          {{- if and .Values.highAvailability.enabled .Values.highAvailability.gracefulShutdown.enabled }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - sleep {{ .Values.highAvailability.gracefulShutdown.preStopDelay }}
          {{- end }}
      volumes:
        - name: temp
          emptyDir: {}
        {{- if .Values.config.enabled }}
        - name: config
          configMap:
            name: {{ include "cloudflare-dns-operator.fullname" . }}-config
            defaultMode: 0644
        {{- end }}
      {{- if and .Values.highAvailability.enabled .Values.highAvailability.gracefulShutdown.enabled }}
      terminationGracePeriodSeconds: {{ .Values.highAvailability.gracefulShutdown.terminationGracePeriodSeconds }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.affinity (and .Values.highAvailability.enabled .Values.highAvailability.podAntiAffinity.enabled) }}
      affinity:
        {{- if and .Values.highAvailability.enabled .Values.highAvailability.podAntiAffinity.enabled }}
        podAntiAffinity:
          {{- if eq .Values.highAvailability.podAntiAffinity.type "preferred" }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: {{ .Values.highAvailability.podAntiAffinity.weight }}
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "cloudflare-dns-operator.selectorLabels" . | nindent 20 }}
                topologyKey: {{ .Values.highAvailability.podAntiAffinity.topologyKey }}
          {{- else if eq .Values.highAvailability.podAntiAffinity.type "required" }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  {{- include "cloudflare-dns-operator.selectorLabels" . | nindent 18 }}
              topologyKey: {{ .Values.highAvailability.podAntiAffinity.topologyKey }}
          {{- end }}
        {{- end }}
        {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
