apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudflare-dns-operator.fullname" . }}
  labels:
    {{- include "cloudflare-dns-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cloudflare-dns-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cloudflare-dns-operator.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cloudflare-dns-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /manager
          args:
            - --leader-elect={{ .Values.operator.leaderElection }}
            - --metrics-bind-address={{ .Values.operator.metricsBindAddress }}
            - --health-probe-bind-address={{ .Values.operator.healthProbeBindAddress }}
          env:
            - name: CLOUDFLARE_EMAIL
              value: {{ .Values.cloudflare.email | quote }}
            {{- if .Values.cloudflare.apiTokenSecretName }}
            - name: CLOUDFLARE_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cloudflare.apiTokenSecretName }}
                  key: {{ .Values.cloudflare.apiTokenSecretKey }}
            {{- else if .Values.cloudflare.apiToken }}
            - name: CLOUDFLARE_API_TOKEN
              value: {{ .Values.cloudflare.apiToken | quote }}
            {{- end }}
            {{- if .Values.cloudflare.zoneId }}
            - name: CLOUDFLARE_ZONE_ID
              value: {{ .Values.cloudflare.zoneId | quote }}
            {{- end }}
            - name: LOG_LEVEL
              value: {{ .Values.operator.logLevel | quote }}
          ports:
            - name: metrics
              containerPort: 8081
              protocol: TCP
            - name: webhook
              containerPort: {{ .Values.operator.webhookPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: temp
      volumes:
        - name: temp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
